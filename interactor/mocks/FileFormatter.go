// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	io "io"

	mock "github.com/stretchr/testify/mock"
)

// FileFormatter is an autogenerated mock type for the FileFormatter type
type FileFormatter struct {
	mock.Mock
}

// OnProgress provides a mock function with given fields: _a0
func (_m *FileFormatter) OnProgress(_a0 func(string, int)) {
	_m.Called(_a0)
}

// StreamFiles provides a mock function with given fields: ctx
func (_m *FileFormatter) StreamFiles(ctx context.Context) (<-chan io.Reader, error) {
	ret := _m.Called(ctx)

	var r0 <-chan io.Reader
	if rf, ok := ret.Get(0).(func(context.Context) <-chan io.Reader); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan io.Reader)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

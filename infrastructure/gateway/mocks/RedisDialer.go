// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	gateway "go-feedmaker/infrastructure/gateway"

	mock "github.com/stretchr/testify/mock"

	redis "github.com/gomodule/redigo/redis"
)

// RedisDialer is an autogenerated mock type for the RedisDialer type
type RedisDialer struct {
	mock.Mock
}

// Dial provides a mock function with given fields: network, addr, options
func (_m *RedisDialer) Dial(network string, addr string, options ...redis.DialOption) (gateway.RedisConnection, error) {
	_va := make([]interface{}, len(options))
	for _i := range options {
		_va[_i] = options[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, network, addr)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 gateway.RedisConnection
	if rf, ok := ret.Get(0).(func(string, string, ...redis.DialOption) gateway.RedisConnection); ok {
		r0 = rf(network, addr, options...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gateway.RedisConnection)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, ...redis.DialOption) error); ok {
		r1 = rf(network, addr, options...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

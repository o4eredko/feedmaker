// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	net "net"

	mock "github.com/stretchr/testify/mock"

	radix "github.com/mediocregopher/radix/v3"

	resp "github.com/mediocregopher/radix/v3/resp"
)

// RedisConnection is an autogenerated mock type for the RedisConnection type
type RedisConnection struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *RedisConnection) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Decode provides a mock function with given fields: _a0
func (_m *RedisConnection) Decode(_a0 resp.Unmarshaler) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(resp.Unmarshaler) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Do provides a mock function with given fields: _a0
func (_m *RedisConnection) Do(_a0 radix.Action) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(radix.Action) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Encode provides a mock function with given fields: _a0
func (_m *RedisConnection) Encode(_a0 resp.Marshaler) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(resp.Marshaler) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetConn provides a mock function with given fields:
func (_m *RedisConnection) NetConn() net.Conn {
	ret := _m.Called()

	var r0 net.Conn
	if rf, ok := ret.Get(0).(func() net.Conn); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(net.Conn)
		}
	}

	return r0
}

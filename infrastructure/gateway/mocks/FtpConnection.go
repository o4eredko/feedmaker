// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// FtpConnection is an autogenerated mock type for the FtpConnection type
type FtpConnection struct {
	mock.Mock
}

// ChangeDir provides a mock function with given fields: path
func (_m *FtpConnection) ChangeDir(path string) error {
	ret := _m.Called(path)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ChangeDirToParent provides a mock function with given fields:
func (_m *FtpConnection) ChangeDirToParent() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Login provides a mock function with given fields: user, password
func (_m *FtpConnection) Login(user string, password string) error {
	ret := _m.Called(user, password)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(user, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MakeDir provides a mock function with given fields: path
func (_m *FtpConnection) MakeDir(path string) error {
	ret := _m.Called(path)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Quit provides a mock function with given fields:
func (_m *FtpConnection) Quit() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveDir provides a mock function with given fields: dir
func (_m *FtpConnection) RemoveDir(dir string) error {
	ret := _m.Called(dir)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(dir)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveDirRecur provides a mock function with given fields: dir
func (_m *FtpConnection) RemoveDirRecur(dir string) error {
	ret := _m.Called(dir)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(dir)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Stor provides a mock function with given fields: path, r
func (_m *FtpConnection) Stor(path string, r io.Reader) error {
	ret := _m.Called(path, r)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, io.Reader) error); ok {
		r0 = rf(path, r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

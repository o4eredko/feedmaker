// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	scheduler "go-feedmaker/infrastructure/scheduler"

	task "go-feedmaker/infrastructure/scheduler/task"
)

// Scheduler is an autogenerated mock type for the Scheduler type
type Scheduler struct {
	mock.Mock
}

// ListSchedules provides a mock function with given fields:
func (_m *Scheduler) ListSchedules() (map[scheduler.TaskID]*task.Schedule, error) {
	ret := _m.Called()

	var r0 map[scheduler.TaskID]*task.Schedule
	if rf, ok := ret.Get(0).(func() map[scheduler.TaskID]*task.Schedule); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[scheduler.TaskID]*task.Schedule)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveTask provides a mock function with given fields: taskID
func (_m *Scheduler) RemoveTask(taskID scheduler.TaskID) error {
	ret := _m.Called(taskID)

	var r0 error
	if rf, ok := ret.Get(0).(func(scheduler.TaskID) error); ok {
		r0 = rf(taskID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ScheduleTask provides a mock function with given fields: taskID, _a1
func (_m *Scheduler) ScheduleTask(taskID scheduler.TaskID, _a1 *task.Task) error {
	ret := _m.Called(taskID, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(scheduler.TaskID, *task.Task) error); ok {
		r0 = rf(taskID, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	cron "github.com/robfig/cron/v3"
	mock "github.com/stretchr/testify/mock"

	scheduler "go-feedmaker/infrastructure/scheduler"
)

// TaskIDMapper is an autogenerated mock type for the TaskIDMapper type
type TaskIDMapper struct {
	mock.Mock
}

// Delete provides a mock function with given fields: _a0
func (_m *TaskIDMapper) Delete(_a0 scheduler.TaskID) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(scheduler.TaskID) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Load provides a mock function with given fields: _a0
func (_m *TaskIDMapper) Load(_a0 scheduler.TaskID) (cron.EntryID, error) {
	ret := _m.Called(_a0)

	var r0 cron.EntryID
	if rf, ok := ret.Get(0).(func(scheduler.TaskID) cron.EntryID); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(cron.EntryID)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(scheduler.TaskID) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: _a0, _a1
func (_m *TaskIDMapper) Store(_a0 scheduler.TaskID, _a1 cron.EntryID) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(scheduler.TaskID, cron.EntryID) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
